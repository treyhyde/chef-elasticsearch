input {
  udp {
    port => 9293
    codec => json
  }
  tcp {
    port => 5000
    type => syslog
    codec => json
  }
  udp {
    port => 5000
    type => syslog
    codec => json
  }
  lumberjack {
    # The port to listen on
    port => 5044
  }
}

filter {
  if [type] == "apache_access" or [type] == "apache_error" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }

  if [type] == "apache_access" and "_grokparsefailure" in [tags] {
    mutate { remove_tag => [ "_grokparsefailure" ] }
    mutate {
      add_tag => [ "grok_reparse" ]
    }
    grok {
      match => { "message" => "- - - \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }
  else if [type] == "apache_error" and "_grokparsefailure" in [tags] {
    mutate { remove_tag => [ "_grokparsefailure" ] }
    mutate {
      add_tag => [ "grok_reparse" ]
    }
    grok {
      match => { "message" => "\[(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR})\] \[(?<message_type>\w+)\] \[client %{IPORHOST:clientip}\] %{GREEDYDATA:description}" }
    }
    date {
      match => [ "timestamp" , "EEE MMM dd HH:mm:ss YYYY" ]
    }
  }

  # Example of custom response based on log path
  #if [type] == "other_log" and [file] =~ /\/usr\/local\/www\/webroot\/centraldesktop\.com\/logs\/monolog\..+\.log/ {
  #  mutate {
  #    replace => [ "type", "monolog" ]
  #  }
  #}
}


output {
  elasticsearch { embedded => true }
}
